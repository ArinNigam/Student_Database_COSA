{"ast":null,"code":"var _jsxFileName = \"D:\\\\Student_Database_IITBH\\\\frontend\\\\src\\\\Add_User\\\\Components\\\\Update.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState }  from 'react';\n// import { Card, CardTitle, CardText } from 'reactstrap'; // Assuming you are using Reactstrap for styling\n\n// function UpdateCards({studentDetails}) {\n\n//     const data = studentDetails\n//     const [isEditing, setIsEditing] = useState(false);\n//     // const [editedAchievements, setEditedAchievements] = useState(data.achievements.slice());\n//     const [editedPORs, setEditedPORs] = useState(data.PORS.slice());\n//     const handleEdit = () => {\n//         setIsEditing(true);\n//     };\n//     const handledisarrange = ()=>{\n//       setIsEditing(false)\n//     }\n//     const addNewPOR = () => {\n//         const newPOR = {\n//           club: '',\n//           session: '',\n//           designation: '',\n//           type: '', // You can set the default type here\n//         };\n\n//         // Append the new POR object to the editedPORs array\n//         setEditedPORs([...editedPORs, newPOR]);\n//       };\n//     const handleSave = async (event)=> {\n//         // Save the edited name and exit edit mode\n\n//         const editedData = {\n//             // achievements: editedAchievements,\n//             PORS: editedPORs,\n//           };\n//           console.log(editedData);\n//         setIsEditing(false);\n//         event.preventDefault(); \n//         try {\n//             const url = 'http://localhost:8000/auth/update';\n//             const response = await fetch(url, {\n//               method: 'POST',\n//               headers: {\n//                 'Content-Type': 'application/json',\n//               },\n//               body: JSON.stringify(data),\n//               credentials: 'include',\n//             });\n\n//             if (response.status === 201) {\n\n//             } else {\n//               throw new Error('Request failed');\n//             }\n//           } catch (error) {\n//             console.log(error);\n//           }\n//     };\n//   return (\n//     <div style={{ textAlign: 'center', width: '75%', marginLeft: '13%' }}>\n//       <Card body>\n//         <CardTitle tag=\"h5\">Student Details</CardTitle>\n//         <CardText>\n//           <strong>Name:</strong> {data.student.name}\n//           <br />\n//           <strong>ID:</strong> {data.student.ID_No}\n//           <br />\n//           <strong>Program:</strong> {data.student.Program}\n//           <br />\n//           <strong>Discipline:</strong> {data.student.discipline}\n//           <br />\n//           <strong>Year of Admission:</strong> {data.student.add_year}\n//         </CardText>\n\n//         <div>\n//       <CardTitle tag=\"h5\">Achievements and POR</CardTitle>\n//       <CardText>\n//         {isEditing ? (\n//           <div>\n//             <strong>Achievements:</strong>\n//             {/* <ul>\n//               {editedAchievements.map((achievement, index) => (\n//                 <li key={index}>\n//                   <input\n//                     type=\"text\"\n//                     value={achievement}\n//                     onChange={(e) => {\n//                       const updatedAchievements = [...editedAchievements];\n//                       updatedAchievements[index] = e.target.value;\n//                       setEditedAchievements(updatedAchievements);\n//                     }}\n//                   />\n//                 </li>\n//               ))}\n//             </ul> */}\n\n//             <strong>Positions of Responsibility:</strong>\n//             <ul>\n//               {editedPORs.map((por, index) => (\n//                 <li key={index}>\n//                 <label>Club:</label>\n//                   <input\n//                     type=\"text\"\n//                     value={por.club}\n//                     onChange={(e) => {\n//                       const updatedPORs = [...editedPORs];\n//                       updatedPORs[index].club = e.target.value;\n//                       setEditedPORs(updatedPORs);\n//                     }}\n//                   />\n//                   <label>Session</label>\n//                   <input\n//                     type=\"text\"\n//                     value={por.session}\n//                     onChange={(e) => {\n//                       const updatedPORs = [...editedPORs];\n//                       updatedPORs[index].session = e.target.value;\n//                       setEditedPORs(updatedPORs);\n//                     }}\n//                   />\n//                   <label>designation</label>\n//                   <input\n//                     type=\"text\"\n//                     value={por.designation}\n//                     onChange={(e) => {\n//                       const updatedPORs = [...editedPORs];\n//                       updatedPORs[index].designation = e.target.value;\n//                       setEditedPORs(updatedPORs);\n//                     }}\n//                   />\n//                   {por.type}\n//                 </li>\n//               ))}\n//             </ul>\n//                 <li>\n//         <button onClick={addNewPOR}>Add New POR</button>\n//       </li>\n//             <button onClick={handleSave}>Save</button>\n//             <button onClick={handledisarrange}>disarrange</button>\n//           </div>\n//         ) : (\n//           <div>\n//             <strong>Achievements:</strong>\n//             {/* <ul>\n//               {editedAchievements.map((achievement, index) => (\n//                 <li key={index}>{achievement}</li>\n//               ))}\n//             </ul> */}\n\n//             <strong>Positions of Responsibility:</strong>\n//             <ul>\n//               {editedPORs.map((por, index) => (\n//                 <li key={index}>\n//                   {por.club}, {por.session}, {por.designation},{por.type}\n//                 </li>\n//               ))}\n//             </ul>\n\n//             <button onClick={handleEdit}>Edit</button>\n//           </div>\n//         )}\n//       </CardText>\n//     </div>\n//       </Card>\n//     </div>\n//   );\n// }\n\n// export default UpdateCards;\n\nimport React, { useState } from 'react';\nimport { Card, CardTitle, CardText } from 'reactstrap'; // Assuming you are using Reactstrap for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateCards({\n  studentDetails\n}) {\n  _s();\n  const data = studentDetails;\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedPORs, setEditedPORs] = useState(data.PORS.slice());\n  const [newPOR, setNewPOR] = useState({\n    club: '',\n    session: '',\n    designation: '',\n    type: '' // You can set the default type here\n  });\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handledisarrange = () => {\n    setIsEditing(false);\n  };\n  const addNewPOR = () => {\n    const newPOR = {\n      club: '',\n      session: '',\n      designation: '',\n      type: '' // You can set the default type here\n    };\n\n    setEditedPORs([...editedPORs, newPOR]);\n  };\n  const handleSave = async event => {\n    // Save the edited name and exit edit mode\n\n    const editedData = {\n      // achievements: editedAchievements,\n      PORS: editedPORs\n    };\n    console.log(editedData);\n    setIsEditing(false);\n    event.preventDefault();\n    try {\n      const url = 'http://localhost:8000/auth/update';\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editedData),\n        credentials: 'include'\n      });\n      if (response.status === 201) {} else {\n        throw new Error('Request failed');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '75%',\n      marginLeft: '13%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      body: true,\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h5\",\n        children: \"Student Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardText, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), \" \", data.student.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), \" \", data.student.ID_No, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Program:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), \" \", data.student.Program, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Discipline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), \" \", data.student.discipline, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Year of Admission:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), \" \", data.student.add_year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: \"Achievements and POR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Positions of Responsibility:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: editedPORs.map((por, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Club:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: por.club,\n                  onChange: e => {\n                    const updatedPORs = [...editedPORs];\n                    updatedPORs[index].club = e.target.value;\n                    setEditedPORs(updatedPORs);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Session:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: por.session,\n                  onChange: e => {\n                    const updatedPORs = [...editedPORs];\n                    updatedPORs[index].session = e.target.value;\n                    setEditedPORs(updatedPORs);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Designation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: por.designation,\n                  onChange: e => {\n                    const updatedPORs = [...editedPORs];\n                    updatedPORs[index].designation = e.target.value;\n                    setEditedPORs(updatedPORs);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Type:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 3\n                  }, this), por._id ?\n                  /*#__PURE__*/\n                  // Check if por.type exists\n                  _jsxDEV(\"span\", {\n                    children: por.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 5\n                  }, this) // Display the current value as text\n                  : /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: por.type,\n                    onChange: e => {\n                      const updatedPORs = [...editedPORs];\n                      updatedPORs[index].type = e.target.value;\n                      setEditedPORs(updatedPORs);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Acad-POR\",\n                      children: \"Academics POR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Scitech-POR\",\n                      children: \"Scitech POR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Cult-POR\",\n                      children: \"Culturals POR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Sport-POR\",\n                      children: \"Sports POR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 5\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addNewPOR,\n                children: \"Add New POR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handledisarrange,\n              children: \"Disarrange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Positions of Responsibility:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: editedPORs.map((por, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [por.club, \", \", por.session, \", \", por.designation, \", \", por.type]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateCards, \"i1lJsvQydLFfdA5erzi5IP3Uilg=\");\n_c = UpdateCards;\nexport default UpdateCards;\nvar _c;\n$RefreshReg$(_c, \"UpdateCards\");","map":{"version":3,"names":["React","useState","Card","CardTitle","CardText","jsxDEV","_jsxDEV","UpdateCards","studentDetails","_s","data","isEditing","setIsEditing","editedPORs","setEditedPORs","PORS","slice","newPOR","setNewPOR","club","session","designation","type","handleEdit","handledisarrange","addNewPOR","handleSave","event","editedData","console","log","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","credentials","status","Error","error","style","textAlign","width","marginLeft","children","tag","fileName","_jsxFileName","lineNumber","columnNumber","student","name","ID_No","Program","discipline","add_year","map","por","index","value","onChange","e","updatedPORs","target","_id","onClick","_c","$RefreshReg$"],"sources":["D:/Student_Database_IITBH/frontend/src/Add_User/Components/Update.jsx"],"sourcesContent":["// import React, { useState }  from 'react';\r\n// import { Card, CardTitle, CardText } from 'reactstrap'; // Assuming you are using Reactstrap for styling\r\n\r\n// function UpdateCards({studentDetails}) {\r\n  \r\n//     const data = studentDetails\r\n//     const [isEditing, setIsEditing] = useState(false);\r\n//     // const [editedAchievements, setEditedAchievements] = useState(data.achievements.slice());\r\n//     const [editedPORs, setEditedPORs] = useState(data.PORS.slice());\r\n//     const handleEdit = () => {\r\n//         setIsEditing(true);\r\n//     };\r\n//     const handledisarrange = ()=>{\r\n//       setIsEditing(false)\r\n//     }\r\n//     const addNewPOR = () => {\r\n//         const newPOR = {\r\n//           club: '',\r\n//           session: '',\r\n//           designation: '',\r\n//           type: '', // You can set the default type here\r\n//         };\r\n      \r\n//         // Append the new POR object to the editedPORs array\r\n//         setEditedPORs([...editedPORs, newPOR]);\r\n//       };\r\n//     const handleSave = async (event)=> {\r\n//         // Save the edited name and exit edit mode\r\n     \r\n//         const editedData = {\r\n//             // achievements: editedAchievements,\r\n//             PORS: editedPORs,\r\n//           };\r\n//           console.log(editedData);\r\n//         setIsEditing(false);\r\n//         event.preventDefault(); \r\n//         try {\r\n//             const url = 'http://localhost:8000/auth/update';\r\n//             const response = await fetch(url, {\r\n//               method: 'POST',\r\n//               headers: {\r\n//                 'Content-Type': 'application/json',\r\n//               },\r\n//               body: JSON.stringify(data),\r\n//               credentials: 'include',\r\n//             });\r\n        \r\n//             if (response.status === 201) {\r\n              \r\n         \r\n//             } else {\r\n//               throw new Error('Request failed');\r\n//             }\r\n//           } catch (error) {\r\n//             console.log(error);\r\n//           }\r\n//     };\r\n//   return (\r\n//     <div style={{ textAlign: 'center', width: '75%', marginLeft: '13%' }}>\r\n//       <Card body>\r\n//         <CardTitle tag=\"h5\">Student Details</CardTitle>\r\n//         <CardText>\r\n//           <strong>Name:</strong> {data.student.name}\r\n//           <br />\r\n//           <strong>ID:</strong> {data.student.ID_No}\r\n//           <br />\r\n//           <strong>Program:</strong> {data.student.Program}\r\n//           <br />\r\n//           <strong>Discipline:</strong> {data.student.discipline}\r\n//           <br />\r\n//           <strong>Year of Admission:</strong> {data.student.add_year}\r\n//         </CardText>\r\n        \r\n//         <div>\r\n//       <CardTitle tag=\"h5\">Achievements and POR</CardTitle>\r\n//       <CardText>\r\n//         {isEditing ? (\r\n//           <div>\r\n//             <strong>Achievements:</strong>\r\n//             {/* <ul>\r\n//               {editedAchievements.map((achievement, index) => (\r\n//                 <li key={index}>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={achievement}\r\n//                     onChange={(e) => {\r\n//                       const updatedAchievements = [...editedAchievements];\r\n//                       updatedAchievements[index] = e.target.value;\r\n//                       setEditedAchievements(updatedAchievements);\r\n//                     }}\r\n//                   />\r\n//                 </li>\r\n//               ))}\r\n//             </ul> */}\r\n\r\n//             <strong>Positions of Responsibility:</strong>\r\n//             <ul>\r\n//               {editedPORs.map((por, index) => (\r\n//                 <li key={index}>\r\n//                 <label>Club:</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={por.club}\r\n//                     onChange={(e) => {\r\n//                       const updatedPORs = [...editedPORs];\r\n//                       updatedPORs[index].club = e.target.value;\r\n//                       setEditedPORs(updatedPORs);\r\n//                     }}\r\n//                   />\r\n//                   <label>Session</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={por.session}\r\n//                     onChange={(e) => {\r\n//                       const updatedPORs = [...editedPORs];\r\n//                       updatedPORs[index].session = e.target.value;\r\n//                       setEditedPORs(updatedPORs);\r\n//                     }}\r\n//                   />\r\n//                   <label>designation</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={por.designation}\r\n//                     onChange={(e) => {\r\n//                       const updatedPORs = [...editedPORs];\r\n//                       updatedPORs[index].designation = e.target.value;\r\n//                       setEditedPORs(updatedPORs);\r\n//                     }}\r\n//                   />\r\n//                   {por.type}\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//                 <li>\r\n//         <button onClick={addNewPOR}>Add New POR</button>\r\n//       </li>\r\n//             <button onClick={handleSave}>Save</button>\r\n//             <button onClick={handledisarrange}>disarrange</button>\r\n//           </div>\r\n//         ) : (\r\n//           <div>\r\n//             <strong>Achievements:</strong>\r\n//             {/* <ul>\r\n//               {editedAchievements.map((achievement, index) => (\r\n//                 <li key={index}>{achievement}</li>\r\n//               ))}\r\n//             </ul> */}\r\n\r\n//             <strong>Positions of Responsibility:</strong>\r\n//             <ul>\r\n//               {editedPORs.map((por, index) => (\r\n//                 <li key={index}>\r\n//                   {por.club}, {por.session}, {por.designation},{por.type}\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n\r\n//             <button onClick={handleEdit}>Edit</button>\r\n//           </div>\r\n//         )}\r\n//       </CardText>\r\n//     </div>\r\n//       </Card>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UpdateCards;\r\n\r\n  \r\nimport React, { useState } from 'react';\r\nimport { Card, CardTitle, CardText } from 'reactstrap'; // Assuming you are using Reactstrap for styling\r\n\r\nfunction UpdateCards({ studentDetails }) {\r\n  const data = studentDetails;\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedPORs, setEditedPORs] = useState(data.PORS.slice());\r\n  const [newPOR, setNewPOR] = useState({\r\n    club: '',\r\n    session: '',\r\n    designation: '',\r\n    type: '', // You can set the default type here\r\n  });\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handledisarrange = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const addNewPOR = () => {\r\n    const newPOR = {\r\n      club: '',\r\n      session: '',\r\n      designation: '',\r\n      type: '', // You can set the default type here\r\n    };\r\n    setEditedPORs([...editedPORs, newPOR]);\r\n  };\r\n\r\n\r\n     const handleSave = async (event)=> {\r\n        // Save the edited name and exit edit mode\r\n     \r\n        const editedData = {\r\n            // achievements: editedAchievements,\r\n            PORS: editedPORs,\r\n          };\r\n          console.log(editedData);\r\n        setIsEditing(false);\r\n        event.preventDefault(); \r\n        try {\r\n            const url = 'http://localhost:8000/auth/update';\r\n            const response = await fetch(url, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(editedData),\r\n              credentials: 'include',\r\n            });\r\n        \r\n            if (response.status === 201) {\r\n              \r\n         \r\n            } else {\r\n              throw new Error('Request failed');\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n    };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', width: '75%', marginLeft: '13%' }}>\r\n      <Card body>\r\n        <CardTitle tag=\"h5\">Student Details</CardTitle>\r\n        <CardText>\r\n          <strong>Name:</strong> {data.student.name}\r\n          <br />\r\n          <strong>ID:</strong> {data.student.ID_No}\r\n          <br />\r\n          <strong>Program:</strong> {data.student.Program}\r\n          <br />\r\n          <strong>Discipline:</strong> {data.student.discipline}\r\n          <br />\r\n          <strong>Year of Admission:</strong> {data.student.add_year}\r\n        </CardText>\r\n\r\n        <div>\r\n          <CardTitle tag=\"h5\">Achievements and POR</CardTitle>\r\n          <CardText>\r\n            {isEditing ? (\r\n              <div>\r\n                <strong>Positions of Responsibility:</strong>\r\n                <ul>\r\n                  {editedPORs.map((por, index) => (\r\n                    <li key={index}>\r\n                      <label>Club:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={por.club}\r\n                        onChange={(e) => {\r\n                          const updatedPORs = [...editedPORs];\r\n                          updatedPORs[index].club = e.target.value;\r\n                          setEditedPORs(updatedPORs);\r\n                        }}\r\n                      />\r\n                      <label>Session:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={por.session}\r\n                        onChange={(e) => {\r\n                          const updatedPORs = [...editedPORs];\r\n                          updatedPORs[index].session = e.target.value;\r\n                          setEditedPORs(updatedPORs);\r\n                        }}\r\n                      />\r\n                      <label>Designation:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={por.designation}\r\n                        onChange={(e) => {\r\n                          const updatedPORs = [...editedPORs];\r\n                          updatedPORs[index].designation = e.target.value;\r\n                          setEditedPORs(updatedPORs);\r\n                        }}\r\n                      />\r\n                      \r\n                      <li key={index}>\r\n  <label>Type:</label>\r\n  {por._id ? ( // Check if por.type exists\r\n    <span>{por.type}</span> // Display the current value as text\r\n  ) : (\r\n    <select\r\n      value={por.type}\r\n      onChange={(e) => {\r\n        const updatedPORs = [...editedPORs];\r\n        updatedPORs[index].type = e.target.value;\r\n        setEditedPORs(updatedPORs);\r\n      }}\r\n    >\r\n                        <option value=\"Acad-POR\">Academics POR</option>\r\n                        <option value=\"Scitech-POR\">Scitech POR</option>\r\n                        <option value=\"Cult-POR\">Culturals POR</option>\r\n                        <option value=\"Sport-POR\">Sports POR</option>\r\n    </select>\r\n  )}\r\n</li>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <li>\r\n                  <button onClick={addNewPOR}>Add New POR</button>\r\n                  \r\n                </li>\r\n                <button onClick={handleSave}>Save</button>\r\n                <button onClick={handledisarrange}>Disarrange</button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <strong>Positions of Responsibility:</strong>\r\n                <ul>\r\n                  {editedPORs.map((por, index) => (\r\n                    <li key={index}>\r\n                      {por.club}, {por.session}, {por.designation}, {por.type}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <button onClick={handleEdit}>Edit</button>\r\n              </div>\r\n            )}\r\n          </CardText>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateCards;\r\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,WAAWA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAMC,IAAI,GAAGF,cAAc;EAC3B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACS,IAAI,CAACK,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,G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"},"metadata":{},"sourceType":"module","externalDependencies":[]}