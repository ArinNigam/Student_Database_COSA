{"ast":null,"code":"var _jsxFileName = \"D:\\\\Student_Database_IITBH\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './Components/Search';\nimport Navbar from './Components/Navbar';\nimport Cards from './Components/Card';\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [student_ID, setStudentID] = useState('');\n  const [dataFetched, setDataFetched] = useState(false); // Track if data has been fetched\n\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:8000/', {\n        student_ID\n      });\n      const result = response.data;\n      setData(result);\n      setDataFetched(true); // Set dataFetched to true after data is fetched\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = () => {\n    // Only fetch data if student_ID is not empty\n    if (student_ID) {\n      fetchData();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch,\n      student_ID: student_ID,\n      setStudentID: setStudentID // Pass the setStudentID function\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), dataFetched && !loading ? /*#__PURE__*/_jsxDEV(Cards, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H12lHHEokzZFXNWdo3K0KehPzao=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Navbar","Cards","React","useState","axios","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","student_ID","setStudentID","dataFetched","setDataFetched","fetchData","response","post","result","error","console","handleSearch","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["D:/Student_Database_IITBH/frontend/src/App.js"],"sourcesContent":["import './App.css';\r\nimport Search from './Components/Search';\r\nimport Navbar from './Components/Navbar';\r\nimport Cards from './Components/Card';\r\nimport React, { useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [student_ID, setStudentID] = useState('');\r\n  const [dataFetched, setDataFetched] = useState(false); // Track if data has been fetched\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/', { student_ID });\r\n      const result = response.data;\r\n      setData(result);\r\n      setDataFetched(true); // Set dataFetched to true after data is fetched\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // Only fetch data if student_ID is not empty\r\n    if (student_ID) {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <Navbar />\r\n      <br />\r\n      <Search\r\n        onSearch={handleSearch}\r\n        student_ID={student_ID}\r\n        setStudentID={setStudentID} // Pass the setStudentID function\r\n      />\r\n      {dataFetched && !loading ? (\r\n        <Cards data={data} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,UAAU,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvD,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BL,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,wBAAwB,EAAE;QAAEN;MAAW,CAAC,CAAC;MAC3E,MAAMO,MAAM,GAAGF,QAAQ,CAACT,IAAI;MAC5BC,OAAO,CAACU,MAAM,CAAC;MACfJ,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRT,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,IAAIV,UAAU,EAAE;MACdI,SAAS,CAAC,CAAC;IACb;EACF,CAAC;EAED,oBACEX,OAAA;IAAKkB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BpB,OAAA,CAACN,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNxB,OAAA,CAACP,MAAM;MACLgC,QAAQ,EAAER,YAAa;MACvBV,UAAU,EAAEA,UAAW;MACvBC,YAAY,EAAEA,YAAa,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACDf,WAAW,IAAI,CAACJ,OAAO,gBACtBL,OAAA,CAACL,KAAK;MAACQ,IAAI,EAAEA;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACnB,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACtB,EAAA,CAzCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}