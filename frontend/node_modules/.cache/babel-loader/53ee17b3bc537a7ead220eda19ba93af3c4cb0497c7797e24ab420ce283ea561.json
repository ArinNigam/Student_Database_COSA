{"ast":null,"code":"var _jsxFileName = \"D:\\\\Student_Database_IITBH\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './Components/Search';\nimport Navbar from './Components/Navbar';\nimport Cards from './Components/Card';\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [student_ID, setStudentID] = useState('');\n  // Define a state variable to track whether data has been fetched\n  const [dataFetched, setDataFetched] = useState(false);\n\n  // Define a function to fetch data\n  const fetchData = async student_ID => {\n    setLoading(true);\n    try {\n      console.log(student_ID);\n      const response = await axios.get('http://localhost:8000/');\n      const result = response.data;\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n      // Set dataFetched to true to indicate that data has been fetched\n      setDataFetched(true);\n    }\n  };\n\n  // Use useEffect to fetch data only when dataFetched is false\n  useEffect(() => {\n    // Fetch data initially or when component mounts\n    fetchData('');\n  }, []);\n\n  // Pass a callback to Search component to trigger data fetch\n  const handleSearch = student_ID => {\n    // Reset dataFetched to false when a new search is initiated\n    setDataFetched(false);\n    fetchData(student_ID);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch,\n      student_ID: student_ID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : dataFetched && /*#__PURE__*/_jsxDEV(Cards, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KxuvGABcS93xaSaBYsVsuyYxmGs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Navbar","Cards","React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","student_ID","setStudentID","dataFetched","setDataFetched","fetchData","console","log","response","get","result","error","handleSearch","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["D:/Student_Database_IITBH/frontend/src/App.js"],"sourcesContent":["import './App.css';\r\nimport Search from './Components/Search';\r\nimport Navbar from './Components/Navbar';\r\nimport Cards from './Components/Card';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [student_ID, setStudentID] = useState('');\r\n  // Define a state variable to track whether data has been fetched\r\n  const [dataFetched, setDataFetched] = useState(false);\r\n\r\n  // Define a function to fetch data\r\n  const fetchData = async (student_ID) => {\r\n    setLoading(true);\r\n    try {\r\n      console.log(student_ID)\r\n      const response = await axios.get('http://localhost:8000/');\r\n      const result = response.data\r\n      setData(result);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n      // Set dataFetched to true to indicate that data has been fetched\r\n      setDataFetched(true);\r\n    }\r\n  };\r\n\r\n  // Use useEffect to fetch data only when dataFetched is false\r\n  useEffect(() => {\r\n    // Fetch data initially or when component mounts\r\n    fetchData('');\r\n  }, []);\r\n\r\n  // Pass a callback to Search component to trigger data fetch\r\n  const handleSearch = (student_ID) => {\r\n    // Reset dataFetched to false when a new search is initiated\r\n    setDataFetched(false);\r\n    fetchData(student_ID);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <Navbar />\r\n      <br />\r\n      {/* Pass the handleSearch callback to the Search component */}\r\n      <Search onSearch={handleSearch} student_ID={student_ID} />\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n       \r\n        dataFetched && <Cards data={data} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,UAAU,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC/C;EACA,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMe,SAAS,GAAG,MAAOJ,UAAU,IAAK;IACtCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACFM,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;MACvB,MAAMO,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,wBAAwB,CAAC;MAC1D,MAAMC,MAAM,GAAGF,QAAQ,CAACX,IAAI;MAC5BC,OAAO,CAACY,MAAM,CAAC;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;MACjB;MACAI,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACd;IACAc,SAAS,CAAC,EAAE,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,YAAY,GAAIX,UAAU,IAAK;IACnC;IACAG,cAAc,CAAC,KAAK,CAAC;IACrBC,SAAS,CAACJ,UAAU,CAAC;EACvB,CAAC;EAED,oBACEP,OAAA;IAAKmB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BrB,OAAA,CAACP,MAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzB,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENzB,OAAA,CAACR,MAAM;MAACkC,QAAQ,EAAER,YAAa;MAACX,UAAU,EAAEA;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDpB,OAAO,gBACNL,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAGjBhB,WAAW,iBAAIT,OAAA,CAACN,KAAK;MAACS,IAAI,EAAEA;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CAnDQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}